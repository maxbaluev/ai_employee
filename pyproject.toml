[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "ai-employee-platform"
version = "0.1.0"
description = "Composio-only universal MCP AI Employee Platform (value-iterative, schema-driven, Outbox executor)."
readme = "README.md"
requires-python = ">=3.13,<4.0"
license = { text = "MIT" }
authors = [{ name = "AI Employee Team", email = "dev@yourcompany.com" }]

dependencies = [
  # Web / API bridge
  "fastapi~=0.118.0",
  "uvicorn[standard]~=0.37.0",
  "httpx~=0.28.1",
  "python-dotenv~=1.1.0",

  # Validation / schema-driven planning & forms
  "pydantic~=2.11.0",
  "pydantic-settings~=2.11.0",
  "jsonschema~=4.25.1",
  "jsonpath-ng~=1.7.0",
  "orjson~=3.11.3",
  "PyYAML~=6.0.2",                  # load Program/Kernels configs (YAML)

  # Supabase (catalog, accounts, audit log)
  "supabase~=2.21.1",

  # Scheduling & retries
  "APScheduler~=3.11.0",
  "tenacity>=8.2,<9",

  # Logging
  "structlog~=25.4.0",

  # Agent runtime + Google APIs
  "google-adk~=1.15.1",             # Outcome Planner, Drafter, Compliance, QA (typed)
  "ag-ui-adk~=0.3.1",
  "google-genai~=1.40.0",

  # MCP (Composio) â€” Python SDK
  "composio~=0.8.20",
  "composio-google-adk~=0.8.20"     # provider bridge used in docs/implementation/composio-tooling.md
]

[project.optional-dependencies]
test = [
  "pytest~=8.3.0",
  "pytest-asyncio~=0.23.8",
  "respx~=0.21.1",
  "freezegun~=1.5.0"
]

[project.scripts]
api = "app.__main__:main"          # uvicorn launcher
outbox = "worker.outbox:main"      # Outbox relay entrypoint
plan = "agents.plan:main"          # manual plan trigger

[tool.hatch.build.targets.wheel]
packages = ["agent"]

[tool.hatch.build.targets.sdist]
include = ["agent"]

[tool.uv]
managed = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q --strict-markers --disable-warnings"
testpaths = ["tests"]
asyncio_mode = "auto"
